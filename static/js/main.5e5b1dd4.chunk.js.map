{"version":3,"sources":["components/card/card.components.jsx","components/card-list/card-list.components.jsx","components/searchBox/searchbox.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placholder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,EAAO,SAACC,GAAD,OACpB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BACxB,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,YCJTC,EAAW,SAACR,GAAD,OAEpB,sBAAKC,UAAY,YAAjB,cAA+BD,EAAMS,SAASC,KAAK,SAAAN,GAAO,OAAG,cAAC,EAAD,CAAMA,QAAWA,WCFpEO,G,MAAY,SAAC,GAAD,EAAEC,WAAF,IAAeC,EAAf,EAAeA,aAAf,OACtB,uBAAOZ,UAAW,SAASa,KAAM,SAASC,YAAY,kBACtDC,SAAWH,MC8DAI,E,kDAxCb,aAAc,IAAD,8BACX,gBAkBFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjBrC,EAAKC,MAAQ,CACXd,SAAW,GACXW,YAAc,IALL,E,qDAYb,WAAoB,IAAD,OACjBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAI,OAAG,EAAKT,SAAS,CAACV,SAASmB,S,oBASvC,WAAU,IAAD,EAE6BC,KAAKN,MAAjCd,EAFD,EAECA,SAAWW,EAFZ,EAEYA,YAEbU,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBACpG,OACM,sBAAK/B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CAAWc,YAAY,kBACvBF,aAAgBgB,KAAKhB,eACrB,cAAC,EAAD,CAAWJ,SAAYqB,W,GAnCjBI,aCdHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5e5b1dd4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n import './card.styles.css';\r\n \r\nexport const Card = (props) =>(\r\n<div className = 'card-container'>\r\n    <img alt = 'monster' src= {`https://robohash.org/${props.monster.id}?set=set1&size=180x180`} />\r\n    <h2> {props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  \r\n</div>\r\n\r\n);","import React from 'react';\r\nimport './card-list.styles.css';\r\n\r\nimport { Card } from './../card/card.components' ;\r\nexport const CardList = (props) =>(\r\n   \r\n    <div className = 'card-list'> {props.monsters.map( monster=> <Card monster = {monster} />\r\n        \r\n      )}</div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './searchbox.styles.css';\r\n\r\nexport  const SearchBox = ({placholder , handleChange}) => (\r\n    <input className ='search' type= \"search\" placeholder=\"search monsters\" \r\n    onChange ={handleChange}/>\r\n);","import React , { Component} from 'react';\n\nimport './App.css';\n import { CardList } from './components/card-list/card-list.components' ;\nimport {SearchBox } from './components/searchBox/searchbox.components';\n// function App() { \n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Hello from Shubham.js\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn & Fuck React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : ''\n    } \n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  \n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n    .then(user=> this.setState({monsters:user}));\n  }\n\n  \n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value}\n      )\n  }\n  render() {\n\n    const { monsters , searchField  } = this.state;\n\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n          <div className=\"App\">\n            <h1> Monsters Rolodex</h1>\n            <SearchBox placeholder=\"search monsters\"\n            handleChange = {this.handleChange}/>\n            <CardList  monsters = {filteredMonsters} />\n          </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}